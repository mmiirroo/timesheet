<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <!-- use annotation -->
    <context:annotation-config/>

    <!-- package to look for annotated classes -->
    <context:component-scan base-package="org.timesheet.service.impl"/>

    <!-- manage transactions with annotations -->
    <tx:annotation-driven/>

    <!-- data source for database -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/timesheet"/>
        <property name="username" value="root"/>
        <property name="password" value="111111"/>
    </bean>

    <!--
        config hibernate session factory Exception NoClassDefFoundError for
        CacheProvider
    -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="org.timesheet.domain"/>

        <property name="hibernateProperties">
            <props>
                <!-- Defines the SQL dialect used in Hiberante's application -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>

                <!-- JDBC connection pool, use Hibernate internal connection pool -->
                <prop key="connection.pool_size">25</prop>

                <!-- Enable Hibernate's automatic session context management -->
                <prop key="current_session_context_class">thread</prop>

                <!-- Disable the second-level cache  -->
                <prop key="cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>

                <!-- Display and format all executed SQL to stdout -->
                <prop key="show_sql">true</prop>
                <prop key="format_sql">true</prop>

                <!-- Drop and re-create the database schema on startup -->
                <prop key="hbm2ddl.auto">none</prop>
            </props>
        </property>
        <!--

            <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        -->
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg type="javax.sql.DataSource" ref='dataSource'/>
    </bean>
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="accountMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.learn.spring.dao.mapper.AccountMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
</beans>